---
layout: handbook-page-toc
title: "GitLab Alliances Handbook"
---

## On this page
{:.no_toc .hidden-md .hidden-lg}

- TOC
{:toc .hidden-md .hidden-lg}


## Alliances Mission

**Accelerate GitLabâ€™s trajectory by connecting the great work every team is doing with the outside world**

## Who are we

- [**Brandon Jung**](https://about.gitlab.com/company/team/#bjung),
    VP of Alliances **{Focused on the Alliances strategy}**


- [**Pete Goldberg**](https://about.gitlab.com/company/team/#pete_goldberg),
    Director of Partnerships **{Focused on AWS}**


- [**Mayank Tahilramani**](https://about.gitlab.com/company/team/s#mayanktahil),
    Senior Alliances Manager **{Focused on Google Cloud, HashiCorp and Ecosystem Partners}**


- [**Amy Brandenburg**](https://about.gitlab.com/company/team/#abrandenburg),
    Technology Alliances Manager **{Focused on VMware and Ecosystem Partners}**


- [**Vick Kelkar**](https://about.gitlab.com/company/team/#vkelkar),
    Director of Partnerships **{Focused on RedHat, Azure and Ecosystem Partners}**


- [**Kasim Ahmad**](https://about.gitlab.com/company/team/#kahmad),
    Business Development Manager **{Focused on Channel and Ecosystem Partners}**

## Open to collaboration

GitLab is an open product with a Core, open-source edition and an enterprise, open-core edition, with additional features that are closed-source.

We're open to integrations with companies and tools that are interested in harnessing GitLab's platform capabilities, user flows and data with their products.

**Traditionally GitLab had defaulted to a competitive voice when talking about other companies. This is counterproductive for the following reasons:**

1. Customers are often not ready or looking to replace all of their tooling. We risk losing credibility when we suggest that we are a replacement (competitive) in areas that we are not.
1. We are actively creating an anti-GitLab salesforce in all of our partners vs collaborating.
1. We may be jointly and actively selling or building integrations with these companies and this voice can be damaging in said partnerships and confusing to customers.

Messaging going forward (Oct 2019):

1. We need to be clear of where we are and where we will be in the future
1. We should highlight our partnerships and through these integrations provide users a single application platform for the entire SDLC

**GitLab will use competitive language only in stages where we are lovable. ([Product Maturity](/direction/maturity/) and [Product Strategy](/handbook/product/gitlab-the-product/#who-gitlab-competes-with))**

**For all areas where we are not yet lovable:**

1. Support integrations with companies that are leaders in their categories and enable them to work well with GitLab.
1. We will actively work to ensure strong integrations (i.e., Jira) through partnerships (Alliance team) that will be driven by customer demand.
1. Through product integrations, GitLab helps developers compile all their work into one tool that can be accessed anywhere. We have worked closely through partnerships to provide developers with a single DevOps experience. GitLab has created partnerships and incorporated integrations with a number of companies including Aqua Security, ARM, AWS, Bitnami, Canonical, Datadog, Digital Ocean, D2IQ, GCP, Mattermost, NetApp, Microsoft, Portworx, Rancher, Suse, Sysdig, Upbound, VMware, Whitesource, and [many more](/partners/).

### Interested in a GitLab Technology Partnership?

GitLab is open to collaboration and committed to building technology partnerships in the DevOps ecosystem. If you are interested in becoming a GitLab Technology Partner, learn more on our [Integrate with us](https://about.gitlab.com/partners/integrate) page.

If you want to talk to us about a partnership please create a [New Partner Issue](https://gitlab.com/gitlab-com/alliances/alliances/issues/new?issuable_template=new_partner) and share details about the technical integration, end user benefits and business relationship that you would ideally want. When creating an issue, please select new_partner issue template in the drop down.

## Partner definitions

### Technology partners

Primary monetization is through the sales of software licensing/support that integrates with GitLab

1. Platform Partners. These are critical partnerships and will be prioritized to support our customer demands.
    1. Cloud partners. For example AWS, Google, Azure, Digital Ocean, IBM
    1. Kubernetes partners: Red Hat, Rancher, VMWare, Mesosphere, Cisco, NetApp, etc.
1. Integrated  Partners. Examples: Jenkins, Codeship, Shippable, TeamCity, Atlassian.
    1. **Outbound**: There is a core set of priority outbound partnerships we will maintain and focus on.
        Those are: [GitHub](/solutions/github/), BitBucket, [Jira](/solutions/jira/) and [Jenkins](/solutions/jenkins/)
    1. **Inbound**: GitLab [plays well with others](/handbook/product/gitlab-the-product/#plays-well-with-others).
        This means we will support integrations to make them successful by enabling them within our product but we encourage other integration partners to [make and maintain the integration with us](/partners/integrate/).
        The work required to deliver the integration will be provided by the partner.
        For go-to-market initiatives with inbound partners, we are open to collaboration but expect them to lead the effort.
1. Sell-to Partners - Most of CNCF and majority of tech partners.
1. Upstream Partners. Examples: JetBrains, Visual Studio, Eclipse, Slack, Cloudability.

## Sales Alignment with Platform Partners

We are able to connect with sales and technical teams at platform partners to accelerate deals and add value for customers.The best way to engage with platform partners is with active opportunities that include expansion for an existing customer and POV or technical evaluation for a prospect.

1. Reference Google Docs to review the sales enablement material on co-selling with the partner.
1. Identify active opportunities (at or about to enter Stage 3) or expansion with current customers.
1. Register the opportunities using the partner registration forms included below. This will allow us to gather the required information to register them in the partner's portal. Once the submission is approved by the partner, we will get an introduction to the account manager covering that account. This can take up to 3-5 business days.
1. For any questions on the above steps, navigating enablement material or if an opportunity is fit to engage a partner please reach out to Kasim Ahmad.

[AWS Opportunity Registration Form](https://forms.gle/pyMcTn2Qn4m6erW29)

[GCP Opportunity Registration Form](https://docs.google.com/forms/d/e/1FAIpQLSee2CZnbDZyTnRAf8jlEDHF9t8NSVDPn4fWChJJu2ESJqYTBg/viewform)

### Services partners

For details on how to we work with Channel partners please go to the Channel Handbook page: [Channel](/handbook/sales/channel/)

### [Resellers](/resellers/)

Primary monetization is through reselling GitLab licenses and services. Resellers can be a service partner too (often known as a Solution Provider).

1. VAR/VAD (Value Added Reseller or Distributor) - Channel services including resale, implementation, contracting, support, financing etc.
1. DMR (Direct Market Reseller)- primary business is resale of the software, often does not implement. Value are the contracts that these partners have in place with customers.

[Learn how to become a GitLab reseller today](/handbook/resellers/)

## Criteria for successful partnerships

1. Exposure - Partnerships which generate more exposure to new segments of audiences, integrations are a good example.
1. Product usage familiarity - more people using GitLab but not necessarily installing their own instance (GitLab.com), open source projects as an example.
1. Adoption - partnerships attracting more people to adopt GitLab for their own instance.  Upstream and downstream partners help here.
1. Revenue - Revenue generating partnerships.  Users come first but focus on revenue has ensured we have the revenue for sustainable growth.
1. Strategic - partners we find will add strategic value to our long term positioning and often around competitive situations.
1. Alignment - collaboration is stronger and our customers have a great experience when the Product, Marketing, and Sales teams are aligned.

## GitLab delivery models

There are many ways that GitLab can be both installed (/install/) and once installed many deployment environments that GitLab can target.  Below is a structure to think about those options and some of the trade-offs that are made depending on the model.

- Self-managed - customer downloads, installs and maintains themselves
- GitLab Hosted - same code as self managed but maintained by a third party
- Marketplace - self-managed but purchased through marketplaces
- GLaaSTS - fully managed (by the cloud provider) private instance of GitLab.  Similar to the managed database options clouds offer.
- GitLab.com - fully managed multi tenent offer by GitLab Inc.

| Delivery Model           | Self-Managed       | GitLab Hosted | Marketplace        | GLaaSTS      | GitLab.com     |
| ------------------------ | ------------------ | ------------- | ------------------ | ------------ | -------------- |
| **State**                | Active             | Deprecated    | Soon               | Future       | Active         |
| **Tenents**              | Single             | Single        | Single             | Single       | Multi          |
| **Installation Package** | Omnibus/Helm       | Omnibus/Helm  | Omnibus/Helm       | Helm         | Moving to Helm |
| **Managed**              | Self               | Partner       | Self               | Cloud        | GitLab         |
| **Billing Ownership**    | GitLab/Partner     | Partner       | GCP, AWS, DO, etc  | Cloud        | GitLab         |
| **Infrastructure Incl.** | no                 | yes           | yes                | yes          | yes            |
| **Partners**             | SI's/VAR's         | MSP's         | Clouds             | Clouds       | GitLab/Partner |
| **Sales Focus**          | Hybrid/Multi-Cloud | Partner       | Self-service       | Self-service | Self-service   |
| **Pricing**              | user/yr            | user/yr       | user/month or hour | user/yr      | user/yr        |

## Alliances KPIs

### Active installations per hosting platform

Total active installations per hosting platform (Total, AWS, Azure, GCP, IBM, Red Hat, Digital Ocean, etc) in a given calendar month.

### Product Download by distribution method

Total downloads by installation method (Omnibus, Cloud native helm chart, Source, etc).
<embed width="100%" height="400px" src="<%= signed_periscope_url(chart: 5542406, dashboard: 428908, embed: 'v2') %>">

## Acquisitions

If you are interested to inquire about a potential acquisition of your company please visit our [acquisition handbook](/handbook/acquisitions).

## Workflow guidelines

### Handling inbound alliance requests if at GitLab

If you've received an inbound alliance request please post a new message to the #alliances Slack channel with the brief description of the request. Once posted, the alliances team will declare who will take lead on that request and the necessary next steps to take.

### Google docs

1. Gdocs which are shared with the partners should be set to "Anyone with the link". Internal Gdocs should be set to "GitLab".
1. The following structure should be used for Gdoc names: "PARTNER NAME and GitLab".
1. Alliance folder contain current work with partners and are kept by Partner name

### Cloud images

See the [Cloud image process](./cloud-images/) page for guidelines.

### MDF cloud credit reimbursement process

When applying for MDF funds which are reimbursed in the form of cloud credits to a GitLab account follow the following process to make sure all relevant parties are informed:

1. Create issue with the following details on the campaign:
    1. Campaign topic
    1. Timeline
    1. Budget
    1. Marketing targets
1. Budget spend approval and acknowledgement from AWS/Google/etc
1. Future credit acknowledgement - by production team lead

### License requests

When partners and potential partners request free licenses to develop integrations with GitLab most need a self-managed license key. To generate a license follow the steps below according to the type of license.

#### Self-managed

1. Inquire with the partner how many developer seats will be necessary.
1. Go to [license.gitlab.com](https://license.gitlab.com/) and sign-in with your GitLab credentials.
1. Choose the manual entry option.
1. Select the Ultimate license (unless requested otherwise).
1. Set the term for 6 months.
1. Set the appropriate number of seats; if unknown set at 5. The total number of seats should not exceed 10.
1. Provide any relevant details about the purpose and use of the license in the free form text box at the bottom of the page.

#### GitLab.com

1. Inquire with the partner how many developer seats will be necessary.
1. [Create an issue](https://gitlab.com/gitlab-com/support/internal-requests/issues) under the [internal-requests project](https://gitlab.com/gitlab-com/support/internal-requests) and choose the `plan-change-request` template.
1. Set the appropriate number of seats; if unknown set at 5. The total number of seats should not exceed 10.
