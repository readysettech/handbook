---
layout: handbook-page-toc
title: CI/CD Sub-department
---

## On this page
{:.no_toc .hidden-md .hidden-lg}

- TOC
{:toc .hidden-md .hidden-lg}

## Vision

To enable software teams around the world to be confident in their delivery by providing a [comprehensive CI/CD platform](https://about.gitlab.com/direction/ops/) that enables them to [Do Powerful Things Easily](https://about.gitlab.com/direction/ops/#do-powerful-things-easily).

## Mission

As engineers in CI/CD we know our customers because we _are_ our customers, and we are constantly striving make our platform better for everyone. We do this through [iteration](/handbook/values/#iteration), [dogfooding](/handbook/values/#dogfooding), and being involved in our open source community. We innovate, we collaborate, and we challenge assumptions to arrive at great results.

We take ownership of the things we build, with a focus on stability and availability. We do this by having a deep technical understanding of the operation and performance characteristics of our platform, and a proactive perspective to future growth.


## Who we are

The CI/CD sub-department is made up of 3 stages:

1. [Verify](/handbook/product/product-categories/#verify-stage)
  * [Verify:Continuous Integration](/handbook/engineering/development/ops/verify/continuous-integration/)
  * [Verify:Runner](/handbook/engineering/development/ops/verify/runner/)
  * [Verify:Testing](/handbook/engineering/development/ops/verify/testing/)
2. [Package](/handbook/product/product-categories/#package-stage)
  * [Package](/handbook/engineering/development/ops/package/)
3. [Release](/handbook/product/product-categories/#release-stage)
  * [Release:Progressive Delivery](/handbook/engineering/development/ops/release/progressive-delivery/)
  * [Release:Release Management](/handbook/engineering/development/ops/release/release-management/)

### Verify:Continuous Integration
<%= direct_team(manager_role: 'Backend Engineering Manager, Verify:Continuous Integration') %>

### Verify:Runner
<%= direct_team(manager_role: 'Backend Engineering Manager, Verify:Runner') %>

### Verify:Testing
<%= direct_team(manager_role: 'Backend Engineering Manager, Verify:Testing') %>

### Verify Frontend
<%= direct_team(manager_role: 'Frontend Engineering Manager, Verify (Interim)') %>

### Package
<%= direct_team(manager_role: 'Backend Engineering Manager, Package') %>

### Release:Progressive Delivery
<%= direct_team(manager_role: 'Backend Engineering Manager, Release:Progressive Delivery') %>

### Release:Release Management
<%= direct_team(manager_role: 'Backend Engineering Manager, Release:Release Management') %>

### Release Frontend
<%= direct_team(manager_role: 'Frontend Engineering Manager, Release (CD)') %>

## How we work

Each group in CI/CD is encouraged to define their own process based on what works best for them. Individual group processes are described on the pages below:

* [Verify:Continuous Integration](/handbook/engineering/development/ops/verify/continuous-integration/)
* [Verify:Runner](/handbook/engineering/development/ops/verify/runner/)
* [Verify:Testing](/handbook/engineering/development/ops/verify/testing/)
* [Package](/handbook/engineering/development/ops/package/)
* [Release:Progressive Delivery](/handbook/engineering/development/ops/release/progressive-delivery/)
* [Release:Release Management](/handbook/engineering/development/ops/release/release-management/)

### Decoupled project management

Many of the groups in CI/CD have separate Frontend and Backend Engineering Managers. Given each group's ability to define their own process, groups may also consider decoupling project management functions from people management functions. 

For example, a group's managers could determine that one of them will be the DRI for a given project, or the entire group. That individual would then be responsible for planning for the whole team, instead of splitting the planning responsiblity between two managers which requires extra coordination. 

## Stable Counterparts

The following members of other functional teams are our stable counterparts:

<%= stable_counterparts(role_regexp: /[,&] CI\/CD/, direct_manager_role: 'Director of Engineering, CI/CD') %>

## Common Links

### Slack Channels

* Verify [#s_verify](https://gitlab.slack.com/archives/C0SFP840G)
  * Verify:Continuous Integration [#g_ci](https://gitlab.slack.com/archives/CPCJ8CCCX)
  * Verify:Runner [#g_runner](https://gitlab.slack.com/archives/CBQ76ND6W)
  * Verify:Testing [#g_testing](https://gitlab.slack.com/archives/CPANF553J)
* Package [#s_package](https://gitlab.slack.com/archives/CAGEWDLPQ)
* Release [#s_release](https://gitlab.slack.com/archives/CBZGR90A2)
  * Release:Progressive Delivery [#g_progressive-delivery](https://gitlab.slack.com/archives/CSTPFMVQQ)
  * Release:Release Management [#g_release-management](https://gitlab.slack.com/archives/CSLU7BMPF)
